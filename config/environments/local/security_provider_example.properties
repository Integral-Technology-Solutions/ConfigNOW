base=config/environments/local/simple.properties

securityConfiguration.authenticationProviders.sortOrder=MyLDAP,MyServiceLDAP,MyAsserter,Trust Service Identity Asserter,DefaultAuthenticator,DefaultIdentityAsserter

securityConfiguration.authenticationProviders=authenticationProvider1,authenticationProvider2,authenticationProvider3

authenticationProvider.authenticationProvider1.name=MyLDAP
authenticationProvider.authenticationProvider1.type=authentication
authenticationProvider.authenticationProvider1.controlFlag=SUFFICIENT
authenticationProvider.authenticationProvider1.host=signon-dev.My.edu.au
authenticationProvider.authenticationProvider1.port=636
authenticationProvider.authenticationProvider1.principal=cn=oraclesoa,ou=Services,o=MyOrganisation
authenticationProvider.authenticationProvider1.credential=testing
authenticationProvider.authenticationProvider1.sslEnabled=true
authenticationProvider.authenticationProvider1.guidAttribute=guid
authenticationProvider.authenticationProvider1.propagateCauseForLoginException=true
# Users
authenticationProvider.authenticationProvider1.userBaseDN=ou=People,o=MyOrganisation
authenticationProvider.authenticationProvider1.allUsersFilter=(&(objectClass=gueduauperson)(cn=s*))
authenticationProvider.authenticationProvider1.userFromNameFilter=(&(cn=%u)(objectclass=person))
authenticationProvider.authenticationProvider1.userNameAttribute=UID
authenticationProvider.authenticationProvider1.userObjectClass=gueduauperson
authenticationProvider.authenticationProvider1.useRetrievedUserNameAsPrincipal=false
# Groups
authenticationProvider.authenticationProvider1.groupBaseDN=ou=groups, o=MyOrganisation
authenticationProvider.authenticationProvider1.allGroupsFilter=(&(ou=active,ou=People,o=MyOrganisation)(cn=System Support))
authenticationProvider.authenticationProvider1.groupFromNameFilter=(&(cn=%g)(objectclass=groupofnames))
authenticationProvider.authenticationProvider1.groupSearchScope=subtree
authenticationProvider.authenticationProvider1.groupMembershipSearching=unlimited
authenticationProvider.authenticationProvider1.maxGroupMembershipSearchLevel=0
authenticationProvider.authenticationProvider1.staticGroupDNsfromMemberDNFilter=(&(member=\%\M))

authenticationProvider.authenticationProvider2.name=MyServiceLDAP
authenticationProvider.authenticationProvider2.type=authentication
authenticationProvider.authenticationProvider2.controlFlag=SUFFICIENT
authenticationProvider.authenticationProvider2.host=signon-dev.My.edu.au
authenticationProvider.authenticationProvider2.port=636
authenticationProvider.authenticationProvider2.principal=cn=oraclesoa,ou=Services,o=MyOrganisation
authenticationProvider.authenticationProvider2.credential=testing
authenticationProvider.authenticationProvider2.sslEnabled=true
authenticationProvider.authenticationProvider2.guidAttribute=guid
authenticationProvider.authenticationProvider2.propagateCauseForLoginException=true
# Users
authenticationProvider.authenticationProvider2.userBaseDN=ou=services,o=MyOrganisation
authenticationProvider.authenticationProvider2.allUsersFilter=(&(objectClass=Person)(cn=*))
authenticationProvider.authenticationProvider2.userFromNameFilter=(&(cn=%u)(objectclass=person))
authenticationProvider.authenticationProvider2.userNameAttribute=UID
authenticationProvider.authenticationProvider2.userObjectClass=person
authenticationProvider.authenticationProvider2.useRetrievedUserNameAsPrincipal=false
# Groups
authenticationProvider.authenticationProvider2.groupBaseDN=ou=groups, o=MyOrganisation
authenticationProvider.authenticationProvider2.allGroupsFilter=(&(ou=active,ou=People,o=MyOrganisation)(cn=System Support))
authenticationProvider.authenticationProvider2.groupFromNameFilter=(&(cn=%g)(objectclass=groupofnames))
authenticationProvider.authenticationProvider2.groupSearchScope=subtree
authenticationProvider.authenticationProvider2.groupMembershipSearching=unlimited
authenticationProvider.authenticationProvider2.maxGroupMembershipSearchLevel=0
authenticationProvider.authenticationProvider2.staticGroupDNsfromMemberDNFilter=(&(member=\%\M))

authenticationProvider.authenticationProvider3.name=MyAsserter
authenticationProvider.authenticationProvider3.type=asserter
authenticationProvider.authenticationProvider3.identityDomain=My.edu.au


securityConfiguration.credentialMappers=credentialMapper1,credentialMapper2

credentialMapper.credentialMapper1.name=MyCredentialMapper
credentialMapper.credentialMapper1.type=SAML
credentialMapper.credentialMapper1.issuerURI=https://www.mycompany.edu.au
credentialMapper.credentialMapper1.defaultTimeToLive=360
credentialMapper.credentialMapper1.signingKeyAlias=my_signer
credentialMapper.credentialMapper1.signingKeyPassPhrase=testing

credentialMapper.credentialMapper2.name=MyPKICredMapper
credentialMapper.credentialMapper2.type=PKI
