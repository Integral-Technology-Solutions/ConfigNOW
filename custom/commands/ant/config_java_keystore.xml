<?xml version="1.0" encoding="UTF-8"?>

<!--

# ============================================================================
#
# Copyright (c) 2007-2010 Integral Technology Solutions Pty Ltd,
# All Rights Reserved.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE BE
# LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR
# ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
# IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
# OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# FOR FURTHER INFORMATION PLEASE SEE THE INTEGRAL TECHNOLOGY SOLUTIONS
# END USER LICENSE AGREEMENT (ELUA).
#
# ============================================================================

-->

<project name="example" basedir="." xmlns:props="antlib:org.apache.ant.props">
    <propertyhelper>
        <props:nested/>
    </propertyhelper>

    <target name="configure_java_keystore" description="Command to configure java keystore">
        <echo message="keystore.storepass set ? ${keystore.storepass.set}" />
        <delete file="${jks.keystore}" />
        <delete file="${jks.csr}" />
        <taskdef resource="net/sf/antcontrib/antlib.xml"></taskdef>
        <antcall target="generate_java_keystore">
            <param name="alias" value="${jks.alias}"/>
            <param name="keyalg" value="${jks.keyalg}"/>
            <param name="keystore" value="${jks.keystore}"/>
            <param name="keysize" value="${jks.keysize}"/>
            <param name="keypass" value="${jks.keypass}"/>
            <param name="storepass" value="${jks.storepass}"/>
            <param name="dname.name" value="${jks.dname.name}"/>
            <param name="dname.organisation" value="${jks.dname.organisation}"/>
            <param name="dname.organisationUnit" value="${jks.dname.organisationUnit}"/>
            <param name="dname.city" value="${jks.dname.city}"/>
            <param name="dname.state" value="${jks.dname.state}"/>
            <param name="dname.countryCode" value="${jks.dname.countryCode}"/>
        </antcall>
        <for list="${jks.certs}" param="currentCert" keepgoing="true">
            <sequential>
                <antcall target="import_certificate_into_jks">
                    <param name="keystore" value="${jks.keystore}"/>
                    <param name="storepass" value="${jks.storepass}"/>
                    <param name="alias" value="${jks.@{currentCert}.name}"/>
                    <param name="filename" value="${jks.@{currentCert}.filename}"/>
                </antcall>
            </sequential>
        </for>
        <echo message="Successfully create java keystore in ${jks.keystore}" />
        <antcall target="generate_certificate_signing_request">
            <param name="keystore" value="${jks.keystore}"/>
            <param name="alias" value="${jks.alias}"/>
            <param name="storepass" value="${jks.storepass}"/>
            <param name="keypass" value="${jks.keypass}"/>
            <param name="csr" value="${jks.csr}"/>
        </antcall>
        <!-- <antcall target="list_keystore_with_password">
                         <param name="keystore" value="${jks.keystore}"/>
            <param name="storepass" value="${jks.storepass}"/>
        </antcall> -->
    </target>
    <target name="import_certificate_into_jks">
      <echo message="Cert location: ${alias}-${filename}"/>
      <echo message="Cert keystore: ${keystore}"/>
      <exec executable="keytool">
          <arg line="-import -keystore ${keystore} -file ${filename} -alias ${alias} -noprompt -storepass ${storepass}" />
      </exec>
    </target>
    <target name="list_keystore_with_password">
        <echo message="Running list_keystore_with_password with ${storepass}" />
        <exec executable="keytool">
            <arg line="-list -keystore ${keystore} -storepass ${storepass}" />
        </exec>
    </target>
    <target name="generate_java_keystore">
        <echo message="Running generate_java_keystore" />
        <exec executable="keytool">
            <arg line="-genkey -alias ${alias} -keyalg ${keyalg} -keystore ${keystore} -keysize ${keysize} -keypass ${keypass} -storepass ${storepass} -noprompt -dname 'CN=${dname.name}, OU=${dname.organisationUnit}, O=${dname.organisation}, L=${dname.city}, ST=${dname.state}, C=${dname.countryCode}'" />
        </exec>
    </target>
    <target name="generate_certificate_signing_request">
        <echo message="Running generate_certificate_signing_request" />
        <exec executable="keytool">
            <arg line="-certreq -alias ${alias} -keystore ${keystore} -file ${csr} -noprompt -keypass ${keypass} -storepass ${storepass}" />
        </exec>
        <echo message="Successfully create csr file in ${csr}" />
    </target>
</project>

